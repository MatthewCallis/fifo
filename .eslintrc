{
  "extends": [
    "airbnb",
    "plugin:ava/recommended",
    "plugin:jsdoc/recommended",
    "plugin:node/recommended",
    "plugin:optimize-regex/all",
    "plugin:ramda/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:security/recommended"
  ],
  "plugins": [
    "ava",
    "jsdoc",
    "node",
    "optimize-regex",
    "ramda",
    "react",
    "react-hooks",
    "security",
    "xss"
  ],
  "env": {
    "browser": true,
    "es6": true,
    "es2021": true,
    "jest": true,
    "node": true
  },
  "globals": {
    "jest": true,
    "expect": true,
    "test": true
  },
  "parserOptions": {
    "sourceType": "module",
    "ecmaVersion": 2021,
    "ecmaFeatures": {
      "jsx": true
    },
    "requireConfigFile": false
  },
  "rules": {
    "import/no-extraneous-dependencies": [
      "error", {
        "devDependencies": ["**/test/**/*.js", "**/test/**/*.jsx"],
        "optionalDependencies": true,
        "peerDependencies": true
      }
    ],
    "camelcase": 0,
    "class-methods-use-this": 0,
    "consistent-return": ["warn", { "treatUndefinedAsUnspecified": false }],
    "global-require": 0,
    "import/extensions": 0,
    "import/no-cycle": 0,
    "max-classes-per-file": 0,
    "max-len": 0,
    "no-console": ["error", { "allow": ["warn", "error"] }],
    "no-empty": ["error", { "allowEmptyCatch": true }],
    "no-param-reassign": 0,
    "no-plusplus": 0,
    "no-restricted-syntax": [
      "error",
      {
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
      },
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ],
    "no-underscore-dangle": 0,
    "no-unused-vars": ["error", { "varsIgnorePattern": "^_", "argsIgnorePattern": "^_", "caughtErrors": "none" }],
    "node/no-unpublished-import": 0,
    "node/no-unsupported-features/es-syntax": 0,
    "object-curly-newline": 0,
    "optimize-regex/optimize-regex": "warn",
    "react/prop-types": 0,
    "react/jsx-key": [1, { "checkFragmentShorthand": true }],
    "security/detect-non-literal-fs-filename": 0,
    "security/detect-object-injection": 0,
    "require-jsdoc": 0,
    "valid-jsdoc": 0
  },
  "settings": {
    "jsdoc": {
      "mode": "typescript"
    },
    "react": {
      "version": "detect"
    }
  }
}
